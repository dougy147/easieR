#!/bin/sh

# ./translatify.sh [translation_file_i18n]

# - 1: Grab a translation_file (i18n)
# - 2: Find the coding file it corresponds to
# - 3: Replace in the coding file every occurrence of strings by variables' names

if [[ -z $1 ]]; then
	FILE='*'
else
	FILE=$1
fi

read -p "Start modifying files in './R/' directory ? (y/N) " ans
if [[ ! $(echo $ans | grep -io "y") ]]; then
	echo "Canceled."
	exit
fi

for file in $FILE; do
	SOURCE=$file;
	base=$(echo "${SOURCE%.*}" | sed "s/.*\///");
	DEST="../$(echo ${base} | sed "s/_i18n//").R";
	if [[ -f $DEST ]]; then
		while read -r line; do
			var=$(echo $line | sed "s/\ *<-\s*.*//"  | sed "s/\]/\\\]/g"| sed "s/\[/\\\[/g" | sed "s/\&/\\\&/g");
			string=$(echo $line | sed "s/^.*<-\ *//" | sed "s/\]/\\\]/g"| sed "s/\[/\\\[/g" | sed "s/\&/\\\&/g");
			sed -i "s@${string}@${var}@g" "$DEST"
		done < ${file}
		echo "$DEST" done.
	else
		echo "$DEST" not found.
		read -p "Apply translation file to every scripts in R? (y/N) " ans
		if [[ $(echo $ans | grep -io "y") == "y" ]]; then
			for f in ../*; do
				if [[ -d $f ]]; then
					continue
				fi
				while read -r l; do
					if [[ -z $l ]]; then
						continue
					fi
					var=$(echo $l | sed "s/\ *<-\s*.*//"  | sed "s/\]/\\\]/g"| sed "s/\[/\\\[/g" | sed "s/\&/\\\&/g");
					string=$(echo $l | sed "s/^.*<-\ *//" | sed "s/\]/\\\]/g"| sed "s/\[/\\\[/g" | sed "s/\&/\\\&/g");
					sed -i "s@${string}@${var}@g" "$f"
					if [[ $? -gt 0 && -n $l ]]; then
						echo -e "ERROR on $l\n(var=$var ; string=$string)"
						echo -e "  -> source file: $FILE"
						echo -e "  -> destin file: $f"
					fi
				done < ${FILE}
				echo " * translated $f"
			done;
		fi
	fi;
done
